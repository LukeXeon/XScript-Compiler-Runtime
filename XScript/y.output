Terminals unused in grammar

   _Dot_


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_statement
    2                 | translation_unit definition_or_statement

    3 definition_or_statement: function_definition
    4                        | statement

    5 type_specifier: _Boolean_
    6               | _Int_
    7               | _Double_
    8               | _String_

    9 function_definition: type_specifier _Identifier_ _Lp_ parameter_list _Rp_ block
   10                    | type_specifier _Identifier_ _Lp_ _Rp_ block
   11                    | type_specifier _Identifier_ _Lp_ parameter_list _Rp_ _Semicolon_
   12                    | type_specifier _Identifier_ _Lp_ _Rp_ _Semicolon_

   13 parameter_list: parameter
   14               | parameter_list _Comma_ type_specifier _Identifier_

   15 parameter: type_specifier _Identifier_

   16 argument_list: assignment_expression
   17              | argument_list _Comma_ assignment_expression

   18 statement_list: statement
   19               | statement_list statement

   20 expression: assignment_expression
   21           | expression _Comma_ assignment_expression

   22 assignment_expression: logical_or_expression
   23                      | postfix_expression assignment_operator assignment_expression

   24 assignment_operator: _Assign_
   25                    | _AddAssign_
   26                    | _SubAssign_
   27                    | _MulAssign_
   28                    | _DivAssign_
   29                    | _ModAssign_

   30 logical_or_expression: logical_and_expression
   31                      | logical_or_expression _LogicalOr_ logical_and_expression

   32 logical_and_expression: equality_expression
   33                       | logical_and_expression _LogicalAnd_ equality_expression

   34 equality_expression: relational_expression
   35                    | equality_expression _Eq_ relational_expression
   36                    | equality_expression _Ne_ relational_expression

   37 relational_expression: additive_expression
   38                      | relational_expression _Gt_ additive_expression
   39                      | relational_expression _Ge_ additive_expression
   40                      | relational_expression _Lt_ additive_expression
   41                      | relational_expression _Le_ additive_expression

   42 additive_expression: multiplicative_expression
   43                    | additive_expression _Add_ multiplicative_expression
   44                    | additive_expression _Sub_ multiplicative_expression

   45 multiplicative_expression: unary_expression
   46                          | multiplicative_expression _Mul_ unary_expression
   47                          | multiplicative_expression _Div_ unary_expression
   48                          | multiplicative_expression _Mod_ unary_expression

   49 unary_expression: postfix_expression
   50                 | _Sub_ unary_expression
   51                 | _Exclamation_ unary_expression

   52 postfix_expression: primary_expression
   53                   | postfix_expression _Lp_ argument_list _Rp_
   54                   | postfix_expression _Lp_ _Rp_
   55                   | postfix_expression _Increment_
   56                   | postfix_expression _Decrement_

   57 primary_expression: _Lp_ expression _Rp_
   58                   | _Identifier_
   59                   | _IntLiteral_
   60                   | _DoubleLiteral_
   61                   | _StringLiteral_
   62                   | _RegexpLiteral_
   63                   | _True_
   64                   | _False_

   65 statement: expression _Semicolon_
   66          | if_statement
   67          | while_statement
   68          | for_statement
   69          | foreach_statement
   70          | return_statement
   71          | break_statement
   72          | continue_statement
   73          | try_statement
   74          | throw_statement
   75          | declaration_statement

   76 if_statement: _If_ _Lp_ expression _Rp_ block
   77             | _If_ _Lp_ expression _Rp_ block _Else_ block
   78             | _If_ _Lp_ expression _Rp_ block elsif_list
   79             | _If_ _Lp_ expression _Rp_ block elsif_list _Else_ block

   80 elsif_list: elsif
   81           | elsif_list elsif

   82 elsif: _Elseif_ _Lp_ expression _Rp_ block

   83 label_opt: /* empty */
   84          | _Identifier_ _Colon_

   85 while_statement: label_opt _While_ _Lp_ expression _Rp_ block

   86 for_statement: label_opt _For_ _Lp_ expression_opt _Semicolon_ expression_opt _Semicolon_ expression_opt _Rp_ block

   87 foreach_statement: label_opt _Foreach_ _Lp_ _Identifier_ _Colon_ expression _Rp_ block

   88 expression_opt: /* empty */
   89               | expression

   90 return_statement: _Return_ expression_opt _Semicolon_

   91 identifier_opt: /* empty */
   92               | _Identifier_

   93 break_statement: _Break_ identifier_opt _Semicolon_

   94 continue_statement: _Continue_ identifier_opt _Semicolon_

   95 try_statement: _Try_ block _Catch_ _Lp_ _Identifier_ _Rp_ block _Finally_ block
   96              | _Try_ block _Finally_ block
   97              | _Try_ block _Catch_ _Lp_ _Identifier_ _Rp_ block

   98 throw_statement: _Throw_ expression _Semicolon_

   99 declaration_statement: type_specifier _Identifier_ _Semicolon_
  100                      | type_specifier _Identifier_ _Assign_ expression _Semicolon_

  101 @1: /* empty */

  102 block: _Lc_ @1 statement_list _Rc_
  103      | _Lc_ _Rc_


Terminals, with rules where they appear

$end (0) 0
error (256)
_IntLiteral_ (258) 59
_DoubleLiteral_ (259) 60
_StringLiteral_ (260) 61
_RegexpLiteral_ (261) 62
_Identifier_ (262) 9 10 11 12 14 15 58 84 87 92 95 97 99 100
_If_ (263) 76 77 78 79
_Else_ (264) 77 79
_Elseif_ (265) 82
_While_ (266) 85
_For_ (267) 86
_Foreach_ (268) 87
_Return_ (269) 90
_Break_ (270) 93
_Continue_ (271) 94
_Lp_ (272) 9 10 11 12 53 54 57 76 77 78 79 82 85 86 87 95 97
_Rp_ (273) 9 10 11 12 53 54 57 76 77 78 79 82 85 86 87 95 97
_Lc_ (274) 102 103
_Rc_ (275) 102 103
_Semicolon_ (276) 11 12 65 86 90 93 94 98 99 100
_Colon_ (277) 84 87
_Comma_ (278) 14 17 21
_Assign_ (279) 24 100
_LogicalAnd_ (280) 33
_LogicalOr_ (281) 31
_Eq_ (282) 35
_Ne_ (283) 36
_Gt_ (284) 38
_Ge_ (285) 39
_Lt_ (286) 40
_Le_ (287) 41
_Add_ (288) 43
_Sub_ (289) 44 50
_Mul_ (290) 46
_Div_ (291) 47
_Mod_ (292) 48
_True_ (293) 63
_False_ (294) 64
_Exclamation_ (295) 51
_Dot_ (296)
_AddAssign_ (297) 25
_SubAssign_ (298) 26
_MulAssign_ (299) 27
_DivAssign_ (300) 28
_ModAssign_ (301) 29
_Increment_ (302) 55
_Decrement_ (303) 56
_Try_ (304) 95 96 97
_Catch_ (305) 95 97
_Finally_ (306) 95 96
_Throw_ (307) 98
_Boolean_ (308) 5
_Int_ (309) 6
_Double_ (310) 7
_String_ (311) 8


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
translation_unit (58)
    on left: 1 2, on right: 0 2
definition_or_statement (59)
    on left: 3 4, on right: 1 2
type_specifier (60)
    on left: 5 6 7 8, on right: 9 10 11 12 14 15 99 100
function_definition (61)
    on left: 9 10 11 12, on right: 3
parameter_list (62)
    on left: 13 14, on right: 9 11 14
parameter (63)
    on left: 15, on right: 13
argument_list (64)
    on left: 16 17, on right: 17 53
statement_list (65)
    on left: 18 19, on right: 19 102
expression (66)
    on left: 20 21, on right: 21 57 65 76 77 78 79 82 85 87 89 98 100
assignment_expression (67)
    on left: 22 23, on right: 16 17 20 21 23
assignment_operator (68)
    on left: 24 25 26 27 28 29, on right: 23
logical_or_expression (69)
    on left: 30 31, on right: 22 31
logical_and_expression (70)
    on left: 32 33, on right: 30 31 33
equality_expression (71)
    on left: 34 35 36, on right: 32 33 35 36
relational_expression (72)
    on left: 37 38 39 40 41, on right: 34 35 36 38 39 40 41
additive_expression (73)
    on left: 42 43 44, on right: 37 38 39 40 41 43 44
multiplicative_expression (74)
    on left: 45 46 47 48, on right: 42 43 44 46 47 48
unary_expression (75)
    on left: 49 50 51, on right: 45 46 47 48 50 51
postfix_expression (76)
    on left: 52 53 54 55 56, on right: 23 49 53 54 55 56
primary_expression (77)
    on left: 57 58 59 60 61 62 63 64, on right: 52
statement (78)
    on left: 65 66 67 68 69 70 71 72 73 74 75, on right: 4 18 19
if_statement (79)
    on left: 76 77 78 79, on right: 66
elsif_list (80)
    on left: 80 81, on right: 78 79 81
elsif (81)
    on left: 82, on right: 80 81
label_opt (82)
    on left: 83 84, on right: 85 86 87
while_statement (83)
    on left: 85, on right: 67
for_statement (84)
    on left: 86, on right: 68
foreach_statement (85)
    on left: 87, on right: 69
expression_opt (86)
    on left: 88 89, on right: 86 90
return_statement (87)
    on left: 90, on right: 70
identifier_opt (88)
    on left: 91 92, on right: 93 94
break_statement (89)
    on left: 93, on right: 71
continue_statement (90)
    on left: 94, on right: 72
try_statement (91)
    on left: 95 96 97, on right: 73
throw_statement (92)
    on left: 98, on right: 74
declaration_statement (93)
    on left: 99 100, on right: 75
block (94)
    on left: 102 103, on right: 9 10 76 77 78 79 82 85 86 87 95 96
    97
@1 (95)
    on left: 101, on right: 102


state 0

    0 $accept: . translation_unit $end

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 5
    _If_             shift, and go to state 6
    _Return_         shift, and go to state 7
    _Break_          shift, and go to state 8
    _Continue_       shift, and go to state 9
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14
    _Try_            shift, and go to state 15
    _Throw_          shift, and go to state 16
    _Boolean_        shift, and go to state 17
    _Int_            shift, and go to state 18
    _Double_         shift, and go to state 19
    _String_         shift, and go to state 20

    $default  reduce using rule 83 (label_opt)

    translation_unit           go to state 21
    definition_or_statement    go to state 22
    type_specifier             go to state 23
    function_definition        go to state 24
    expression                 go to state 25
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35
    statement                  go to state 36
    if_statement               go to state 37
    label_opt                  go to state 38
    while_statement            go to state 39
    for_statement              go to state 40
    foreach_statement          go to state 41
    return_statement           go to state 42
    break_statement            go to state 43
    continue_statement         go to state 44
    try_statement              go to state 45
    throw_statement            go to state 46
    declaration_statement      go to state 47


state 1

   59 primary_expression: _IntLiteral_ .

    $default  reduce using rule 59 (primary_expression)


state 2

   60 primary_expression: _DoubleLiteral_ .

    $default  reduce using rule 60 (primary_expression)


state 3

   61 primary_expression: _StringLiteral_ .

    $default  reduce using rule 61 (primary_expression)


state 4

   62 primary_expression: _RegexpLiteral_ .

    $default  reduce using rule 62 (primary_expression)


state 5

   58 primary_expression: _Identifier_ .
   84 label_opt: _Identifier_ . _Colon_

    _Colon_  shift, and go to state 48

    $default  reduce using rule 58 (primary_expression)


state 6

   76 if_statement: _If_ . _Lp_ expression _Rp_ block
   77             | _If_ . _Lp_ expression _Rp_ block _Else_ block
   78             | _If_ . _Lp_ expression _Rp_ block elsif_list
   79             | _If_ . _Lp_ expression _Rp_ block elsif_list _Else_ block

    _Lp_  shift, and go to state 49


state 7

   90 return_statement: _Return_ . expression_opt _Semicolon_

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    $default  reduce using rule 88 (expression_opt)

    expression                 go to state 51
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35
    expression_opt             go to state 52


state 8

   93 break_statement: _Break_ . identifier_opt _Semicolon_

    _Identifier_  shift, and go to state 53

    $default  reduce using rule 91 (identifier_opt)

    identifier_opt  go to state 54


state 9

   94 continue_statement: _Continue_ . identifier_opt _Semicolon_

    _Identifier_  shift, and go to state 53

    $default  reduce using rule 91 (identifier_opt)

    identifier_opt  go to state 55


state 10

   57 primary_expression: _Lp_ . expression _Rp_

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    expression                 go to state 56
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 11

   50 unary_expression: _Sub_ . unary_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    unary_expression    go to state 57
    postfix_expression  go to state 58
    primary_expression  go to state 35


state 12

   63 primary_expression: _True_ .

    $default  reduce using rule 63 (primary_expression)


state 13

   64 primary_expression: _False_ .

    $default  reduce using rule 64 (primary_expression)


state 14

   51 unary_expression: _Exclamation_ . unary_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    unary_expression    go to state 59
    postfix_expression  go to state 58
    primary_expression  go to state 35


state 15

   95 try_statement: _Try_ . block _Catch_ _Lp_ _Identifier_ _Rp_ block _Finally_ block
   96              | _Try_ . block _Finally_ block
   97              | _Try_ . block _Catch_ _Lp_ _Identifier_ _Rp_ block

    _Lc_  shift, and go to state 60

    block  go to state 61


state 16

   98 throw_statement: _Throw_ . expression _Semicolon_

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    expression                 go to state 62
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 17

    5 type_specifier: _Boolean_ .

    $default  reduce using rule 5 (type_specifier)


state 18

    6 type_specifier: _Int_ .

    $default  reduce using rule 6 (type_specifier)


state 19

    7 type_specifier: _Double_ .

    $default  reduce using rule 7 (type_specifier)


state 20

    8 type_specifier: _String_ .

    $default  reduce using rule 8 (type_specifier)


state 21

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end             shift, and go to state 63
    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 5
    _If_             shift, and go to state 6
    _Return_         shift, and go to state 7
    _Break_          shift, and go to state 8
    _Continue_       shift, and go to state 9
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14
    _Try_            shift, and go to state 15
    _Throw_          shift, and go to state 16
    _Boolean_        shift, and go to state 17
    _Int_            shift, and go to state 18
    _Double_         shift, and go to state 19
    _String_         shift, and go to state 20

    $default  reduce using rule 83 (label_opt)

    definition_or_statement    go to state 64
    type_specifier             go to state 23
    function_definition        go to state 24
    expression                 go to state 25
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35
    statement                  go to state 36
    if_statement               go to state 37
    label_opt                  go to state 38
    while_statement            go to state 39
    for_statement              go to state 40
    foreach_statement          go to state 41
    return_statement           go to state 42
    break_statement            go to state 43
    continue_statement         go to state 44
    try_statement              go to state 45
    throw_statement            go to state 46
    declaration_statement      go to state 47


state 22

    1 translation_unit: definition_or_statement .

    $default  reduce using rule 1 (translation_unit)


state 23

    9 function_definition: type_specifier . _Identifier_ _Lp_ parameter_list _Rp_ block
   10                    | type_specifier . _Identifier_ _Lp_ _Rp_ block
   11                    | type_specifier . _Identifier_ _Lp_ parameter_list _Rp_ _Semicolon_
   12                    | type_specifier . _Identifier_ _Lp_ _Rp_ _Semicolon_
   99 declaration_statement: type_specifier . _Identifier_ _Semicolon_
  100                      | type_specifier . _Identifier_ _Assign_ expression _Semicolon_

    _Identifier_  shift, and go to state 65


state 24

    3 definition_or_statement: function_definition .

    $default  reduce using rule 3 (definition_or_statement)


state 25

   21 expression: expression . _Comma_ assignment_expression
   65 statement: expression . _Semicolon_

    _Semicolon_  shift, and go to state 66
    _Comma_      shift, and go to state 67


state 26

   20 expression: assignment_expression .

    $default  reduce using rule 20 (expression)


state 27

   22 assignment_expression: logical_or_expression .
   31 logical_or_expression: logical_or_expression . _LogicalOr_ logical_and_expression

    _LogicalOr_  shift, and go to state 68

    $default  reduce using rule 22 (assignment_expression)


state 28

   30 logical_or_expression: logical_and_expression .
   33 logical_and_expression: logical_and_expression . _LogicalAnd_ equality_expression

    _LogicalAnd_  shift, and go to state 69

    $default  reduce using rule 30 (logical_or_expression)


state 29

   32 logical_and_expression: equality_expression .
   35 equality_expression: equality_expression . _Eq_ relational_expression
   36                    | equality_expression . _Ne_ relational_expression

    _Eq_  shift, and go to state 70
    _Ne_  shift, and go to state 71

    $default  reduce using rule 32 (logical_and_expression)


state 30

   34 equality_expression: relational_expression .
   38 relational_expression: relational_expression . _Gt_ additive_expression
   39                      | relational_expression . _Ge_ additive_expression
   40                      | relational_expression . _Lt_ additive_expression
   41                      | relational_expression . _Le_ additive_expression

    _Gt_  shift, and go to state 72
    _Ge_  shift, and go to state 73
    _Lt_  shift, and go to state 74
    _Le_  shift, and go to state 75

    $default  reduce using rule 34 (equality_expression)


state 31

   37 relational_expression: additive_expression .
   43 additive_expression: additive_expression . _Add_ multiplicative_expression
   44                    | additive_expression . _Sub_ multiplicative_expression

    _Add_  shift, and go to state 76
    _Sub_  shift, and go to state 77

    $default  reduce using rule 37 (relational_expression)


state 32

   42 additive_expression: multiplicative_expression .
   46 multiplicative_expression: multiplicative_expression . _Mul_ unary_expression
   47                          | multiplicative_expression . _Div_ unary_expression
   48                          | multiplicative_expression . _Mod_ unary_expression

    _Mul_  shift, and go to state 78
    _Div_  shift, and go to state 79
    _Mod_  shift, and go to state 80

    $default  reduce using rule 42 (additive_expression)


state 33

   45 multiplicative_expression: unary_expression .

    $default  reduce using rule 45 (multiplicative_expression)


state 34

   23 assignment_expression: postfix_expression . assignment_operator assignment_expression
   49 unary_expression: postfix_expression .
   53 postfix_expression: postfix_expression . _Lp_ argument_list _Rp_
   54                   | postfix_expression . _Lp_ _Rp_
   55                   | postfix_expression . _Increment_
   56                   | postfix_expression . _Decrement_

    _Lp_         shift, and go to state 81
    _Assign_     shift, and go to state 82
    _AddAssign_  shift, and go to state 83
    _SubAssign_  shift, and go to state 84
    _MulAssign_  shift, and go to state 85
    _DivAssign_  shift, and go to state 86
    _ModAssign_  shift, and go to state 87
    _Increment_  shift, and go to state 88
    _Decrement_  shift, and go to state 89

    $default  reduce using rule 49 (unary_expression)

    assignment_operator  go to state 90


state 35

   52 postfix_expression: primary_expression .

    $default  reduce using rule 52 (postfix_expression)


state 36

    4 definition_or_statement: statement .

    $default  reduce using rule 4 (definition_or_statement)


state 37

   66 statement: if_statement .

    $default  reduce using rule 66 (statement)


state 38

   85 while_statement: label_opt . _While_ _Lp_ expression _Rp_ block
   86 for_statement: label_opt . _For_ _Lp_ expression_opt _Semicolon_ expression_opt _Semicolon_ expression_opt _Rp_ block
   87 foreach_statement: label_opt . _Foreach_ _Lp_ _Identifier_ _Colon_ expression _Rp_ block

    _While_    shift, and go to state 91
    _For_      shift, and go to state 92
    _Foreach_  shift, and go to state 93


state 39

   67 statement: while_statement .

    $default  reduce using rule 67 (statement)


state 40

   68 statement: for_statement .

    $default  reduce using rule 68 (statement)


state 41

   69 statement: foreach_statement .

    $default  reduce using rule 69 (statement)


state 42

   70 statement: return_statement .

    $default  reduce using rule 70 (statement)


state 43

   71 statement: break_statement .

    $default  reduce using rule 71 (statement)


state 44

   72 statement: continue_statement .

    $default  reduce using rule 72 (statement)


state 45

   73 statement: try_statement .

    $default  reduce using rule 73 (statement)


state 46

   74 statement: throw_statement .

    $default  reduce using rule 74 (statement)


state 47

   75 statement: declaration_statement .

    $default  reduce using rule 75 (statement)


state 48

   84 label_opt: _Identifier_ _Colon_ .

    $default  reduce using rule 84 (label_opt)


state 49

   76 if_statement: _If_ _Lp_ . expression _Rp_ block
   77             | _If_ _Lp_ . expression _Rp_ block _Else_ block
   78             | _If_ _Lp_ . expression _Rp_ block elsif_list
   79             | _If_ _Lp_ . expression _Rp_ block elsif_list _Else_ block

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    expression                 go to state 94
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 50

   58 primary_expression: _Identifier_ .

    $default  reduce using rule 58 (primary_expression)


state 51

   21 expression: expression . _Comma_ assignment_expression
   89 expression_opt: expression .

    _Comma_  shift, and go to state 67

    $default  reduce using rule 89 (expression_opt)


state 52

   90 return_statement: _Return_ expression_opt . _Semicolon_

    _Semicolon_  shift, and go to state 95


state 53

   92 identifier_opt: _Identifier_ .

    $default  reduce using rule 92 (identifier_opt)


state 54

   93 break_statement: _Break_ identifier_opt . _Semicolon_

    _Semicolon_  shift, and go to state 96


state 55

   94 continue_statement: _Continue_ identifier_opt . _Semicolon_

    _Semicolon_  shift, and go to state 97


state 56

   21 expression: expression . _Comma_ assignment_expression
   57 primary_expression: _Lp_ expression . _Rp_

    _Rp_     shift, and go to state 98
    _Comma_  shift, and go to state 67


state 57

   50 unary_expression: _Sub_ unary_expression .

    $default  reduce using rule 50 (unary_expression)


state 58

   49 unary_expression: postfix_expression .
   53 postfix_expression: postfix_expression . _Lp_ argument_list _Rp_
   54                   | postfix_expression . _Lp_ _Rp_
   55                   | postfix_expression . _Increment_
   56                   | postfix_expression . _Decrement_

    _Lp_         shift, and go to state 81
    _Increment_  shift, and go to state 88
    _Decrement_  shift, and go to state 89

    $default  reduce using rule 49 (unary_expression)


state 59

   51 unary_expression: _Exclamation_ unary_expression .

    $default  reduce using rule 51 (unary_expression)


state 60

  102 block: _Lc_ . @1 statement_list _Rc_
  103      | _Lc_ . _Rc_

    _Rc_  shift, and go to state 99

    $default  reduce using rule 101 (@1)

    @1  go to state 100


state 61

   95 try_statement: _Try_ block . _Catch_ _Lp_ _Identifier_ _Rp_ block _Finally_ block
   96              | _Try_ block . _Finally_ block
   97              | _Try_ block . _Catch_ _Lp_ _Identifier_ _Rp_ block

    _Catch_    shift, and go to state 101
    _Finally_  shift, and go to state 102


state 62

   21 expression: expression . _Comma_ assignment_expression
   98 throw_statement: _Throw_ expression . _Semicolon_

    _Semicolon_  shift, and go to state 103
    _Comma_      shift, and go to state 67


state 63

    0 $accept: translation_unit $end .

    $default  accept


state 64

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 65

    9 function_definition: type_specifier _Identifier_ . _Lp_ parameter_list _Rp_ block
   10                    | type_specifier _Identifier_ . _Lp_ _Rp_ block
   11                    | type_specifier _Identifier_ . _Lp_ parameter_list _Rp_ _Semicolon_
   12                    | type_specifier _Identifier_ . _Lp_ _Rp_ _Semicolon_
   99 declaration_statement: type_specifier _Identifier_ . _Semicolon_
  100                      | type_specifier _Identifier_ . _Assign_ expression _Semicolon_

    _Lp_         shift, and go to state 104
    _Semicolon_  shift, and go to state 105
    _Assign_     shift, and go to state 106


state 66

   65 statement: expression _Semicolon_ .

    $default  reduce using rule 65 (statement)


state 67

   21 expression: expression _Comma_ . assignment_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    assignment_expression      go to state 107
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 68

   31 logical_or_expression: logical_or_expression _LogicalOr_ . logical_and_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    logical_and_expression     go to state 108
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 69

   33 logical_and_expression: logical_and_expression _LogicalAnd_ . equality_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    equality_expression        go to state 109
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 70

   35 equality_expression: equality_expression _Eq_ . relational_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    relational_expression      go to state 110
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 71

   36 equality_expression: equality_expression _Ne_ . relational_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    relational_expression      go to state 111
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 72

   38 relational_expression: relational_expression _Gt_ . additive_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    additive_expression        go to state 112
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 73

   39 relational_expression: relational_expression _Ge_ . additive_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    additive_expression        go to state 113
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 74

   40 relational_expression: relational_expression _Lt_ . additive_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    additive_expression        go to state 114
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 75

   41 relational_expression: relational_expression _Le_ . additive_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    additive_expression        go to state 115
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 76

   43 additive_expression: additive_expression _Add_ . multiplicative_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    multiplicative_expression  go to state 116
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 77

   44 additive_expression: additive_expression _Sub_ . multiplicative_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    multiplicative_expression  go to state 117
    unary_expression           go to state 33
    postfix_expression         go to state 58
    primary_expression         go to state 35


state 78

   46 multiplicative_expression: multiplicative_expression _Mul_ . unary_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    unary_expression    go to state 118
    postfix_expression  go to state 58
    primary_expression  go to state 35


state 79

   47 multiplicative_expression: multiplicative_expression _Div_ . unary_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    unary_expression    go to state 119
    postfix_expression  go to state 58
    primary_expression  go to state 35


state 80

   48 multiplicative_expression: multiplicative_expression _Mod_ . unary_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    unary_expression    go to state 120
    postfix_expression  go to state 58
    primary_expression  go to state 35


state 81

   53 postfix_expression: postfix_expression _Lp_ . argument_list _Rp_
   54                   | postfix_expression _Lp_ . _Rp_

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Rp_             shift, and go to state 121
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    argument_list              go to state 122
    assignment_expression      go to state 123
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 82

   24 assignment_operator: _Assign_ .

    $default  reduce using rule 24 (assignment_operator)


state 83

   25 assignment_operator: _AddAssign_ .

    $default  reduce using rule 25 (assignment_operator)


state 84

   26 assignment_operator: _SubAssign_ .

    $default  reduce using rule 26 (assignment_operator)


state 85

   27 assignment_operator: _MulAssign_ .

    $default  reduce using rule 27 (assignment_operator)


state 86

   28 assignment_operator: _DivAssign_ .

    $default  reduce using rule 28 (assignment_operator)


state 87

   29 assignment_operator: _ModAssign_ .

    $default  reduce using rule 29 (assignment_operator)


state 88

   55 postfix_expression: postfix_expression _Increment_ .

    $default  reduce using rule 55 (postfix_expression)


state 89

   56 postfix_expression: postfix_expression _Decrement_ .

    $default  reduce using rule 56 (postfix_expression)


state 90

   23 assignment_expression: postfix_expression assignment_operator . assignment_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    assignment_expression      go to state 124
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 91

   85 while_statement: label_opt _While_ . _Lp_ expression _Rp_ block

    _Lp_  shift, and go to state 125


state 92

   86 for_statement: label_opt _For_ . _Lp_ expression_opt _Semicolon_ expression_opt _Semicolon_ expression_opt _Rp_ block

    _Lp_  shift, and go to state 126


state 93

   87 foreach_statement: label_opt _Foreach_ . _Lp_ _Identifier_ _Colon_ expression _Rp_ block

    _Lp_  shift, and go to state 127


state 94

   21 expression: expression . _Comma_ assignment_expression
   76 if_statement: _If_ _Lp_ expression . _Rp_ block
   77             | _If_ _Lp_ expression . _Rp_ block _Else_ block
   78             | _If_ _Lp_ expression . _Rp_ block elsif_list
   79             | _If_ _Lp_ expression . _Rp_ block elsif_list _Else_ block

    _Rp_     shift, and go to state 128
    _Comma_  shift, and go to state 67


state 95

   90 return_statement: _Return_ expression_opt _Semicolon_ .

    $default  reduce using rule 90 (return_statement)


state 96

   93 break_statement: _Break_ identifier_opt _Semicolon_ .

    $default  reduce using rule 93 (break_statement)


state 97

   94 continue_statement: _Continue_ identifier_opt _Semicolon_ .

    $default  reduce using rule 94 (continue_statement)


state 98

   57 primary_expression: _Lp_ expression _Rp_ .

    $default  reduce using rule 57 (primary_expression)


state 99

  103 block: _Lc_ _Rc_ .

    $default  reduce using rule 103 (block)


state 100

  102 block: _Lc_ @1 . statement_list _Rc_

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 5
    _If_             shift, and go to state 6
    _Return_         shift, and go to state 7
    _Break_          shift, and go to state 8
    _Continue_       shift, and go to state 9
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14
    _Try_            shift, and go to state 15
    _Throw_          shift, and go to state 16
    _Boolean_        shift, and go to state 17
    _Int_            shift, and go to state 18
    _Double_         shift, and go to state 19
    _String_         shift, and go to state 20

    $default  reduce using rule 83 (label_opt)

    type_specifier             go to state 129
    statement_list             go to state 130
    expression                 go to state 25
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35
    statement                  go to state 131
    if_statement               go to state 37
    label_opt                  go to state 38
    while_statement            go to state 39
    for_statement              go to state 40
    foreach_statement          go to state 41
    return_statement           go to state 42
    break_statement            go to state 43
    continue_statement         go to state 44
    try_statement              go to state 45
    throw_statement            go to state 46
    declaration_statement      go to state 47


state 101

   95 try_statement: _Try_ block _Catch_ . _Lp_ _Identifier_ _Rp_ block _Finally_ block
   97              | _Try_ block _Catch_ . _Lp_ _Identifier_ _Rp_ block

    _Lp_  shift, and go to state 132


state 102

   96 try_statement: _Try_ block _Finally_ . block

    _Lc_  shift, and go to state 60

    block  go to state 133


state 103

   98 throw_statement: _Throw_ expression _Semicolon_ .

    $default  reduce using rule 98 (throw_statement)


state 104

    9 function_definition: type_specifier _Identifier_ _Lp_ . parameter_list _Rp_ block
   10                    | type_specifier _Identifier_ _Lp_ . _Rp_ block
   11                    | type_specifier _Identifier_ _Lp_ . parameter_list _Rp_ _Semicolon_
   12                    | type_specifier _Identifier_ _Lp_ . _Rp_ _Semicolon_

    _Rp_       shift, and go to state 134
    _Boolean_  shift, and go to state 17
    _Int_      shift, and go to state 18
    _Double_   shift, and go to state 19
    _String_   shift, and go to state 20

    type_specifier  go to state 135
    parameter_list  go to state 136
    parameter       go to state 137


state 105

   99 declaration_statement: type_specifier _Identifier_ _Semicolon_ .

    $default  reduce using rule 99 (declaration_statement)


state 106

  100 declaration_statement: type_specifier _Identifier_ _Assign_ . expression _Semicolon_

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    expression                 go to state 138
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 107

   21 expression: expression _Comma_ assignment_expression .

    $default  reduce using rule 21 (expression)


state 108

   31 logical_or_expression: logical_or_expression _LogicalOr_ logical_and_expression .
   33 logical_and_expression: logical_and_expression . _LogicalAnd_ equality_expression

    _LogicalAnd_  shift, and go to state 69

    $default  reduce using rule 31 (logical_or_expression)


state 109

   33 logical_and_expression: logical_and_expression _LogicalAnd_ equality_expression .
   35 equality_expression: equality_expression . _Eq_ relational_expression
   36                    | equality_expression . _Ne_ relational_expression

    _Eq_  shift, and go to state 70
    _Ne_  shift, and go to state 71

    $default  reduce using rule 33 (logical_and_expression)


state 110

   35 equality_expression: equality_expression _Eq_ relational_expression .
   38 relational_expression: relational_expression . _Gt_ additive_expression
   39                      | relational_expression . _Ge_ additive_expression
   40                      | relational_expression . _Lt_ additive_expression
   41                      | relational_expression . _Le_ additive_expression

    _Gt_  shift, and go to state 72
    _Ge_  shift, and go to state 73
    _Lt_  shift, and go to state 74
    _Le_  shift, and go to state 75

    $default  reduce using rule 35 (equality_expression)


state 111

   36 equality_expression: equality_expression _Ne_ relational_expression .
   38 relational_expression: relational_expression . _Gt_ additive_expression
   39                      | relational_expression . _Ge_ additive_expression
   40                      | relational_expression . _Lt_ additive_expression
   41                      | relational_expression . _Le_ additive_expression

    _Gt_  shift, and go to state 72
    _Ge_  shift, and go to state 73
    _Lt_  shift, and go to state 74
    _Le_  shift, and go to state 75

    $default  reduce using rule 36 (equality_expression)


state 112

   38 relational_expression: relational_expression _Gt_ additive_expression .
   43 additive_expression: additive_expression . _Add_ multiplicative_expression
   44                    | additive_expression . _Sub_ multiplicative_expression

    _Add_  shift, and go to state 76
    _Sub_  shift, and go to state 77

    $default  reduce using rule 38 (relational_expression)


state 113

   39 relational_expression: relational_expression _Ge_ additive_expression .
   43 additive_expression: additive_expression . _Add_ multiplicative_expression
   44                    | additive_expression . _Sub_ multiplicative_expression

    _Add_  shift, and go to state 76
    _Sub_  shift, and go to state 77

    $default  reduce using rule 39 (relational_expression)


state 114

   40 relational_expression: relational_expression _Lt_ additive_expression .
   43 additive_expression: additive_expression . _Add_ multiplicative_expression
   44                    | additive_expression . _Sub_ multiplicative_expression

    _Add_  shift, and go to state 76
    _Sub_  shift, and go to state 77

    $default  reduce using rule 40 (relational_expression)


state 115

   41 relational_expression: relational_expression _Le_ additive_expression .
   43 additive_expression: additive_expression . _Add_ multiplicative_expression
   44                    | additive_expression . _Sub_ multiplicative_expression

    _Add_  shift, and go to state 76
    _Sub_  shift, and go to state 77

    $default  reduce using rule 41 (relational_expression)


state 116

   43 additive_expression: additive_expression _Add_ multiplicative_expression .
   46 multiplicative_expression: multiplicative_expression . _Mul_ unary_expression
   47                          | multiplicative_expression . _Div_ unary_expression
   48                          | multiplicative_expression . _Mod_ unary_expression

    _Mul_  shift, and go to state 78
    _Div_  shift, and go to state 79
    _Mod_  shift, and go to state 80

    $default  reduce using rule 43 (additive_expression)


state 117

   44 additive_expression: additive_expression _Sub_ multiplicative_expression .
   46 multiplicative_expression: multiplicative_expression . _Mul_ unary_expression
   47                          | multiplicative_expression . _Div_ unary_expression
   48                          | multiplicative_expression . _Mod_ unary_expression

    _Mul_  shift, and go to state 78
    _Div_  shift, and go to state 79
    _Mod_  shift, and go to state 80

    $default  reduce using rule 44 (additive_expression)


state 118

   46 multiplicative_expression: multiplicative_expression _Mul_ unary_expression .

    $default  reduce using rule 46 (multiplicative_expression)


state 119

   47 multiplicative_expression: multiplicative_expression _Div_ unary_expression .

    $default  reduce using rule 47 (multiplicative_expression)


state 120

   48 multiplicative_expression: multiplicative_expression _Mod_ unary_expression .

    $default  reduce using rule 48 (multiplicative_expression)


state 121

   54 postfix_expression: postfix_expression _Lp_ _Rp_ .

    $default  reduce using rule 54 (postfix_expression)


state 122

   17 argument_list: argument_list . _Comma_ assignment_expression
   53 postfix_expression: postfix_expression _Lp_ argument_list . _Rp_

    _Rp_     shift, and go to state 139
    _Comma_  shift, and go to state 140


state 123

   16 argument_list: assignment_expression .

    $default  reduce using rule 16 (argument_list)


state 124

   23 assignment_expression: postfix_expression assignment_operator assignment_expression .

    $default  reduce using rule 23 (assignment_expression)


state 125

   85 while_statement: label_opt _While_ _Lp_ . expression _Rp_ block

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    expression                 go to state 141
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 126

   86 for_statement: label_opt _For_ _Lp_ . expression_opt _Semicolon_ expression_opt _Semicolon_ expression_opt _Rp_ block

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    $default  reduce using rule 88 (expression_opt)

    expression                 go to state 51
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35
    expression_opt             go to state 142


state 127

   87 foreach_statement: label_opt _Foreach_ _Lp_ . _Identifier_ _Colon_ expression _Rp_ block

    _Identifier_  shift, and go to state 143


state 128

   76 if_statement: _If_ _Lp_ expression _Rp_ . block
   77             | _If_ _Lp_ expression _Rp_ . block _Else_ block
   78             | _If_ _Lp_ expression _Rp_ . block elsif_list
   79             | _If_ _Lp_ expression _Rp_ . block elsif_list _Else_ block

    _Lc_  shift, and go to state 60

    block  go to state 144


state 129

   99 declaration_statement: type_specifier . _Identifier_ _Semicolon_
  100                      | type_specifier . _Identifier_ _Assign_ expression _Semicolon_

    _Identifier_  shift, and go to state 145


state 130

   19 statement_list: statement_list . statement
  102 block: _Lc_ @1 statement_list . _Rc_

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 5
    _If_             shift, and go to state 6
    _Return_         shift, and go to state 7
    _Break_          shift, and go to state 8
    _Continue_       shift, and go to state 9
    _Lp_             shift, and go to state 10
    _Rc_             shift, and go to state 146
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14
    _Try_            shift, and go to state 15
    _Throw_          shift, and go to state 16
    _Boolean_        shift, and go to state 17
    _Int_            shift, and go to state 18
    _Double_         shift, and go to state 19
    _String_         shift, and go to state 20

    $default  reduce using rule 83 (label_opt)

    type_specifier             go to state 129
    expression                 go to state 25
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35
    statement                  go to state 147
    if_statement               go to state 37
    label_opt                  go to state 38
    while_statement            go to state 39
    for_statement              go to state 40
    foreach_statement          go to state 41
    return_statement           go to state 42
    break_statement            go to state 43
    continue_statement         go to state 44
    try_statement              go to state 45
    throw_statement            go to state 46
    declaration_statement      go to state 47


state 131

   18 statement_list: statement .

    $default  reduce using rule 18 (statement_list)


state 132

   95 try_statement: _Try_ block _Catch_ _Lp_ . _Identifier_ _Rp_ block _Finally_ block
   97              | _Try_ block _Catch_ _Lp_ . _Identifier_ _Rp_ block

    _Identifier_  shift, and go to state 148


state 133

   96 try_statement: _Try_ block _Finally_ block .

    $default  reduce using rule 96 (try_statement)


state 134

   10 function_definition: type_specifier _Identifier_ _Lp_ _Rp_ . block
   12                    | type_specifier _Identifier_ _Lp_ _Rp_ . _Semicolon_

    _Lc_         shift, and go to state 60
    _Semicolon_  shift, and go to state 149

    block  go to state 150


state 135

   15 parameter: type_specifier . _Identifier_

    _Identifier_  shift, and go to state 151


state 136

    9 function_definition: type_specifier _Identifier_ _Lp_ parameter_list . _Rp_ block
   11                    | type_specifier _Identifier_ _Lp_ parameter_list . _Rp_ _Semicolon_
   14 parameter_list: parameter_list . _Comma_ type_specifier _Identifier_

    _Rp_     shift, and go to state 152
    _Comma_  shift, and go to state 153


state 137

   13 parameter_list: parameter .

    $default  reduce using rule 13 (parameter_list)


state 138

   21 expression: expression . _Comma_ assignment_expression
  100 declaration_statement: type_specifier _Identifier_ _Assign_ expression . _Semicolon_

    _Semicolon_  shift, and go to state 154
    _Comma_      shift, and go to state 67


state 139

   53 postfix_expression: postfix_expression _Lp_ argument_list _Rp_ .

    $default  reduce using rule 53 (postfix_expression)


state 140

   17 argument_list: argument_list _Comma_ . assignment_expression

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    assignment_expression      go to state 155
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 141

   21 expression: expression . _Comma_ assignment_expression
   85 while_statement: label_opt _While_ _Lp_ expression . _Rp_ block

    _Rp_     shift, and go to state 156
    _Comma_  shift, and go to state 67


state 142

   86 for_statement: label_opt _For_ _Lp_ expression_opt . _Semicolon_ expression_opt _Semicolon_ expression_opt _Rp_ block

    _Semicolon_  shift, and go to state 157


state 143

   87 foreach_statement: label_opt _Foreach_ _Lp_ _Identifier_ . _Colon_ expression _Rp_ block

    _Colon_  shift, and go to state 158


state 144

   76 if_statement: _If_ _Lp_ expression _Rp_ block .
   77             | _If_ _Lp_ expression _Rp_ block . _Else_ block
   78             | _If_ _Lp_ expression _Rp_ block . elsif_list
   79             | _If_ _Lp_ expression _Rp_ block . elsif_list _Else_ block

    _Else_    shift, and go to state 159
    _Elseif_  shift, and go to state 160

    $default  reduce using rule 76 (if_statement)

    elsif_list  go to state 161
    elsif       go to state 162


state 145

   99 declaration_statement: type_specifier _Identifier_ . _Semicolon_
  100                      | type_specifier _Identifier_ . _Assign_ expression _Semicolon_

    _Semicolon_  shift, and go to state 105
    _Assign_     shift, and go to state 106


state 146

  102 block: _Lc_ @1 statement_list _Rc_ .

    $default  reduce using rule 102 (block)


state 147

   19 statement_list: statement_list statement .

    $default  reduce using rule 19 (statement_list)


state 148

   95 try_statement: _Try_ block _Catch_ _Lp_ _Identifier_ . _Rp_ block _Finally_ block
   97              | _Try_ block _Catch_ _Lp_ _Identifier_ . _Rp_ block

    _Rp_  shift, and go to state 163


state 149

   12 function_definition: type_specifier _Identifier_ _Lp_ _Rp_ _Semicolon_ .

    $default  reduce using rule 12 (function_definition)


state 150

   10 function_definition: type_specifier _Identifier_ _Lp_ _Rp_ block .

    $default  reduce using rule 10 (function_definition)


state 151

   15 parameter: type_specifier _Identifier_ .

    $default  reduce using rule 15 (parameter)


state 152

    9 function_definition: type_specifier _Identifier_ _Lp_ parameter_list _Rp_ . block
   11                    | type_specifier _Identifier_ _Lp_ parameter_list _Rp_ . _Semicolon_

    _Lc_         shift, and go to state 60
    _Semicolon_  shift, and go to state 164

    block  go to state 165


state 153

   14 parameter_list: parameter_list _Comma_ . type_specifier _Identifier_

    _Boolean_  shift, and go to state 17
    _Int_      shift, and go to state 18
    _Double_   shift, and go to state 19
    _String_   shift, and go to state 20

    type_specifier  go to state 166


state 154

  100 declaration_statement: type_specifier _Identifier_ _Assign_ expression _Semicolon_ .

    $default  reduce using rule 100 (declaration_statement)


state 155

   17 argument_list: argument_list _Comma_ assignment_expression .

    $default  reduce using rule 17 (argument_list)


state 156

   85 while_statement: label_opt _While_ _Lp_ expression _Rp_ . block

    _Lc_  shift, and go to state 60

    block  go to state 167


state 157

   86 for_statement: label_opt _For_ _Lp_ expression_opt _Semicolon_ . expression_opt _Semicolon_ expression_opt _Rp_ block

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    $default  reduce using rule 88 (expression_opt)

    expression                 go to state 51
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35
    expression_opt             go to state 168


state 158

   87 foreach_statement: label_opt _Foreach_ _Lp_ _Identifier_ _Colon_ . expression _Rp_ block

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    expression                 go to state 169
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 159

   77 if_statement: _If_ _Lp_ expression _Rp_ block _Else_ . block

    _Lc_  shift, and go to state 60

    block  go to state 170


state 160

   82 elsif: _Elseif_ . _Lp_ expression _Rp_ block

    _Lp_  shift, and go to state 171


state 161

   78 if_statement: _If_ _Lp_ expression _Rp_ block elsif_list .
   79             | _If_ _Lp_ expression _Rp_ block elsif_list . _Else_ block
   81 elsif_list: elsif_list . elsif

    _Else_    shift, and go to state 172
    _Elseif_  shift, and go to state 160

    $default  reduce using rule 78 (if_statement)

    elsif  go to state 173


state 162

   80 elsif_list: elsif .

    $default  reduce using rule 80 (elsif_list)


state 163

   95 try_statement: _Try_ block _Catch_ _Lp_ _Identifier_ _Rp_ . block _Finally_ block
   97              | _Try_ block _Catch_ _Lp_ _Identifier_ _Rp_ . block

    _Lc_  shift, and go to state 60

    block  go to state 174


state 164

   11 function_definition: type_specifier _Identifier_ _Lp_ parameter_list _Rp_ _Semicolon_ .

    $default  reduce using rule 11 (function_definition)


state 165

    9 function_definition: type_specifier _Identifier_ _Lp_ parameter_list _Rp_ block .

    $default  reduce using rule 9 (function_definition)


state 166

   14 parameter_list: parameter_list _Comma_ type_specifier . _Identifier_

    _Identifier_  shift, and go to state 175


state 167

   85 while_statement: label_opt _While_ _Lp_ expression _Rp_ block .

    $default  reduce using rule 85 (while_statement)


state 168

   86 for_statement: label_opt _For_ _Lp_ expression_opt _Semicolon_ expression_opt . _Semicolon_ expression_opt _Rp_ block

    _Semicolon_  shift, and go to state 176


state 169

   21 expression: expression . _Comma_ assignment_expression
   87 foreach_statement: label_opt _Foreach_ _Lp_ _Identifier_ _Colon_ expression . _Rp_ block

    _Rp_     shift, and go to state 177
    _Comma_  shift, and go to state 67


state 170

   77 if_statement: _If_ _Lp_ expression _Rp_ block _Else_ block .

    $default  reduce using rule 77 (if_statement)


state 171

   82 elsif: _Elseif_ _Lp_ . expression _Rp_ block

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    expression                 go to state 178
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35


state 172

   79 if_statement: _If_ _Lp_ expression _Rp_ block elsif_list _Else_ . block

    _Lc_  shift, and go to state 60

    block  go to state 179


state 173

   81 elsif_list: elsif_list elsif .

    $default  reduce using rule 81 (elsif_list)


state 174

   95 try_statement: _Try_ block _Catch_ _Lp_ _Identifier_ _Rp_ block . _Finally_ block
   97              | _Try_ block _Catch_ _Lp_ _Identifier_ _Rp_ block .

    _Finally_  shift, and go to state 180

    $default  reduce using rule 97 (try_statement)


state 175

   14 parameter_list: parameter_list _Comma_ type_specifier _Identifier_ .

    $default  reduce using rule 14 (parameter_list)


state 176

   86 for_statement: label_opt _For_ _Lp_ expression_opt _Semicolon_ expression_opt _Semicolon_ . expression_opt _Rp_ block

    _IntLiteral_     shift, and go to state 1
    _DoubleLiteral_  shift, and go to state 2
    _StringLiteral_  shift, and go to state 3
    _RegexpLiteral_  shift, and go to state 4
    _Identifier_     shift, and go to state 50
    _Lp_             shift, and go to state 10
    _Sub_            shift, and go to state 11
    _True_           shift, and go to state 12
    _False_          shift, and go to state 13
    _Exclamation_    shift, and go to state 14

    $default  reduce using rule 88 (expression_opt)

    expression                 go to state 51
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    additive_expression        go to state 31
    multiplicative_expression  go to state 32
    unary_expression           go to state 33
    postfix_expression         go to state 34
    primary_expression         go to state 35
    expression_opt             go to state 181


state 177

   87 foreach_statement: label_opt _Foreach_ _Lp_ _Identifier_ _Colon_ expression _Rp_ . block

    _Lc_  shift, and go to state 60

    block  go to state 182


state 178

   21 expression: expression . _Comma_ assignment_expression
   82 elsif: _Elseif_ _Lp_ expression . _Rp_ block

    _Rp_     shift, and go to state 183
    _Comma_  shift, and go to state 67


state 179

   79 if_statement: _If_ _Lp_ expression _Rp_ block elsif_list _Else_ block .

    $default  reduce using rule 79 (if_statement)


state 180

   95 try_statement: _Try_ block _Catch_ _Lp_ _Identifier_ _Rp_ block _Finally_ . block

    _Lc_  shift, and go to state 60

    block  go to state 184


state 181

   86 for_statement: label_opt _For_ _Lp_ expression_opt _Semicolon_ expression_opt _Semicolon_ expression_opt . _Rp_ block

    _Rp_  shift, and go to state 185


state 182

   87 foreach_statement: label_opt _Foreach_ _Lp_ _Identifier_ _Colon_ expression _Rp_ block .

    $default  reduce using rule 87 (foreach_statement)


state 183

   82 elsif: _Elseif_ _Lp_ expression _Rp_ . block

    _Lc_  shift, and go to state 60

    block  go to state 186


state 184

   95 try_statement: _Try_ block _Catch_ _Lp_ _Identifier_ _Rp_ block _Finally_ block .

    $default  reduce using rule 95 (try_statement)


state 185

   86 for_statement: label_opt _For_ _Lp_ expression_opt _Semicolon_ expression_opt _Semicolon_ expression_opt _Rp_ . block

    _Lc_  shift, and go to state 60

    block  go to state 187


state 186

   82 elsif: _Elseif_ _Lp_ expression _Rp_ block .

    $default  reduce using rule 82 (elsif)


state 187

   86 for_statement: label_opt _For_ _Lp_ expression_opt _Semicolon_ expression_opt _Semicolon_ expression_opt _Rp_ block .

    $default  reduce using rule 86 (for_statement)
